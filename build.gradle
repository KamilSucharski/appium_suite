import javax.swing.*

plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "2.1.20"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.appium:java-client:9.4.0"
    implementation 'junit:junit:4.13.2'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'com.google.code.gson:gson:2.12.1'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
}

abstract class TestTask extends Test {

    @Option(option = "packageName", description = "Package to run tests in")
    @Input
    String packageName

    @Override
    void executeTests() {
        include(packageName)
        super.executeTests()
    }
}

tasks.register('completeRegressionAndroid', TestTask) {
    packageName = "android/test/regression/CompleteRegressionAndroidSuite.class"
}

tasks.register('onlySemiAutomatedRegressionAndroid', TestTask) {
    packageName = "android/test/regression/OnlySemiAutomatedRegressionAndroidSuite.class"
}

tasks.register('onlyFullyAutomatedRegressionAndroid', TestTask) {
    packageName = "android/test/regression/OnlyFullyAutomatedRegressionAndroidSuite.class"
}

tasks.register('completeRegressionIOS', TestTask) {
    packageName = "ios/test/regression/CompleteRegressionIOSSuite.class"
}

tasks.register('onlySemiAutomatedRegressionIOS', TestTask) {
    packageName = "ios/test/regression/OnlySemiAutomatedRegressionIOSSuite.class"
}

tasks.register('onlyFullyAutomatedRegressionIOS', TestTask) {
    packageName = "ios/test/regression/OnlyFullyAutomatedRegressionIOSSuite.class"
}

tasks.register('reportClean') {
    doLast {
        int dialogResult = JOptionPane.showConfirmDialog(
                null,
                "This action will delete both json and html reports.",
                "Delete reports?",
                JOptionPane.YES_NO_OPTION
        )

        if (dialogResult == JOptionPane.YES_OPTION) {
            final File reportOutputDirectory = new File("report")
            if (reportOutputDirectory.exists()) {
                reportOutputDirectory.deleteDir()
            }
        }
    }
}

tasks.register('reportHTML', TestTask) {
    packageName = "common/util/report/html/HTMLReportGenerator.class"
}